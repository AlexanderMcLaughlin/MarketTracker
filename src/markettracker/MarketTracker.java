/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package markettracker;

import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;

/**
 *
 * @author Alexander
 */
public class MarketTracker extends javax.swing.JFrame {

    public static String currentIndex;
    public static String finhubAPIToken;
    public static String[] algorithmList = {"Real-Time"};
    
    
    /**
     * Creates new form RealtimeMarket
     */
    public MarketTracker() {
        currentIndex = "DJI";
        
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        IndexButtons = new javax.swing.ButtonGroup();
        apiKeyDialog = new javax.swing.JDialog();
        enterAPIKeyLabel = new javax.swing.JLabel();
        APICancel = new javax.swing.JButton();
        APISave = new javax.swing.JButton();
        ApiKeyField = new javax.swing.JTextField();
        APIHelpLabel = new javax.swing.JLabel();
        currentAPIKey = new javax.swing.JLabel();
        mainPanelContainer = new javax.swing.JPanel();
        optionsPanel = new javax.swing.JPanel();
        currentIndexLabel = new javax.swing.JLabel();
        currentIndexPick = new javax.swing.JLabel();
        currentIndexPriceLabel = new javax.swing.JLabel();
        currentIndexPrice = new javax.swing.JLabel();
        topTrackerContainer = new javax.swing.JPanel();
        topAlgoPick = new javax.swing.JComboBox();
        topAlgoLabel = new javax.swing.JLabel();
        topTrackerPanel = new javax.swing.JPanel();
        topActualLabel = new javax.swing.JLabel();
        topProjectedLabel = new javax.swing.JLabel();
        topProjected = new javax.swing.JLabel();
        topActual = new javax.swing.JLabel();
        newsPanelContainer = new javax.swing.JPanel();
        midTrackerContainer = new javax.swing.JPanel();
        midAlgoPick = new javax.swing.JComboBox();
        midAlgoLabel = new javax.swing.JLabel();
        midTrackerPanel = new javax.swing.JPanel();
        midProjected = new javax.swing.JLabel();
        midActual = new javax.swing.JLabel();
        midActualLabel = new javax.swing.JLabel();
        midProjectedLabel = new javax.swing.JLabel();
        botTrackerContainer = new javax.swing.JPanel();
        botAlgoPick = new javax.swing.JComboBox();
        botAlgoLabel = new javax.swing.JLabel();
        botTrackerPanel = new javax.swing.JPanel();
        botActual = new javax.swing.JLabel();
        botProjectedLabel = new javax.swing.JLabel();
        botProjected = new javax.swing.JLabel();
        botActualLabel = new javax.swing.JLabel();
        mainMenuBar = new javax.swing.JMenuBar();
        stockOption = new javax.swing.JMenu();
        changeIndexOption = new javax.swing.JMenu();
        DJIOption = new javax.swing.JRadioButtonMenuItem();
        NASOption = new javax.swing.JRadioButtonMenuItem();
        SNPOption = new javax.swing.JRadioButtonMenuItem();
        SettingsMenuItem = new javax.swing.JMenu();
        APIKeyMenuItem = new javax.swing.JMenuItem();

        apiKeyDialog.setTitle("API Key");
        apiKeyDialog.setAlwaysOnTop(true);
        apiKeyDialog.setMaximumSize(new java.awt.Dimension(390, 200));
        apiKeyDialog.setMinimumSize(new java.awt.Dimension(390, 200));
        apiKeyDialog.setPreferredSize(new java.awt.Dimension(390, 200));
        apiKeyDialog.setResizable(false);
        apiKeyDialog.setSize(new java.awt.Dimension(390, 200));
        apiKeyDialog.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        enterAPIKeyLabel.setText("Enter API Key");
        apiKeyDialog.getContentPane().add(enterAPIKeyLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        APICancel.setText("Cancel");
        APICancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                APICancelActionPerformed(evt);
            }
        });
        apiKeyDialog.getContentPane().add(APICancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 140, -1, -1));

        APISave.setText("Save");
        APISave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                APISaveActionPerformed(evt);
            }
        });
        apiKeyDialog.getContentPane().add(APISave, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 140, -1, -1));
        apiKeyDialog.getContentPane().add(ApiKeyField, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 340, -1));

        APIHelpLabel.setText("Visit https://finnhub.io/ and register for an account to gain access");
        apiKeyDialog.getContentPane().add(APIHelpLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, -1, -1));

        currentAPIKey.setForeground(new java.awt.Color(153, 0, 0));
        currentAPIKey.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        apiKeyDialog.getContentPane().add(currentAPIKey, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, -1, -1));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(51, 51, 51));
        setMinimumSize(new java.awt.Dimension(1210, 560));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        mainPanelContainer.setBackground(new java.awt.Color(51, 51, 51));
        mainPanelContainer.setMaximumSize(new java.awt.Dimension(1210, 560));
        mainPanelContainer.setMinimumSize(new java.awt.Dimension(1210, 560));
        mainPanelContainer.setPreferredSize(new java.awt.Dimension(1210, 560));
        mainPanelContainer.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        optionsPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        currentIndexLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        currentIndexLabel.setText("Current Index:");
        optionsPanel.add(currentIndexLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 20, -1, -1));

        currentIndexPick.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        currentIndexPick.setForeground(new java.awt.Color(0, 0, 255));
        currentIndexPick.setText("Dow Jones");
        optionsPanel.add(currentIndexPick, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 20, -1, -1));

        currentIndexPriceLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        currentIndexPriceLabel.setText("Current Index Price:");
        optionsPanel.add(currentIndexPriceLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 20, -1, -1));

        currentIndexPrice.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        currentIndexPrice.setForeground(new java.awt.Color(0, 0, 255));
        currentIndexPrice.setText("000000.00");
        optionsPanel.add(currentIndexPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 20, -1, -1));

        mainPanelContainer.add(optionsPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1210, 80));

        topTrackerContainer.setBackground(new java.awt.Color(102, 102, 102));
        topTrackerContainer.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        topAlgoPick.setModel(getComboModel());
        topTrackerContainer.add(topAlgoPick, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 120, -1));

        topAlgoLabel.setForeground(new java.awt.Color(255, 255, 255));
        topAlgoLabel.setText("Algorithm");
        topTrackerContainer.add(topAlgoLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        topTrackerPanel.setBackground(new java.awt.Color(0, 0, 0));
        topTrackerPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        topActualLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        topActualLabel.setForeground(new java.awt.Color(255, 255, 255));
        topActualLabel.setText("Actual:");
        topActualLabel.setToolTipText("");
        topTrackerPanel.add(topActualLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        topProjectedLabel.setBackground(new java.awt.Color(255, 255, 255));
        topProjectedLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        topProjectedLabel.setForeground(new java.awt.Color(255, 255, 255));
        topProjectedLabel.setText("Projected:");
        topTrackerPanel.add(topProjectedLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, -1, -1));

        topProjected.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        topProjected.setForeground(new java.awt.Color(0, 204, 0));
        topProjected.setText("jLabel13");
        topTrackerPanel.add(topProjected, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 40, -1, -1));
        topProjected.getAccessibleContext().setAccessibleName("topProjected");

        topActual.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        topActual.setForeground(new java.awt.Color(0, 204, 0));
        topActual.setText("jLabel13");
        topTrackerPanel.add(topActual, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 10, -1, -1));
        topActual.getAccessibleContext().setAccessibleName("topActual");

        topTrackerContainer.add(topTrackerPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 10, 720, 120));

        mainPanelContainer.add(topTrackerContainer, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 880, 140));

        newsPanelContainer.setBackground(new java.awt.Color(102, 102, 102));
        newsPanelContainer.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        mainPanelContainer.add(newsPanelContainer, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 90, 300, 440));

        midTrackerContainer.setBackground(new java.awt.Color(102, 102, 102));
        midTrackerContainer.setRequestFocusEnabled(false);
        midTrackerContainer.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        midAlgoPick.setModel(getComboModel());
        midTrackerContainer.add(midAlgoPick, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 120, -1));

        midAlgoLabel.setForeground(new java.awt.Color(255, 255, 255));
        midAlgoLabel.setText("Algorithm");
        midTrackerContainer.add(midAlgoLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        midTrackerPanel.setBackground(new java.awt.Color(0, 0, 0));
        midTrackerPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        midProjected.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        midProjected.setForeground(new java.awt.Color(0, 204, 0));
        midProjected.setText("jLabel13");
        midTrackerPanel.add(midProjected, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 40, -1, -1));

        midActual.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        midActual.setForeground(new java.awt.Color(0, 204, 0));
        midActual.setText("jLabel13");
        midTrackerPanel.add(midActual, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 10, -1, -1));

        midActualLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        midActualLabel.setForeground(new java.awt.Color(255, 255, 255));
        midActualLabel.setText("Actual:");
        midActualLabel.setToolTipText("");
        midTrackerPanel.add(midActualLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        midProjectedLabel.setBackground(new java.awt.Color(255, 255, 255));
        midProjectedLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        midProjectedLabel.setForeground(new java.awt.Color(255, 255, 255));
        midProjectedLabel.setText("Projected:");
        midTrackerPanel.add(midProjectedLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, -1, -1));

        midTrackerContainer.add(midTrackerPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 10, 720, 120));

        mainPanelContainer.add(midTrackerContainer, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 240, 880, 140));

        botTrackerContainer.setBackground(new java.awt.Color(102, 102, 102));
        botTrackerContainer.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        botAlgoPick.setModel(getComboModel());
        botTrackerContainer.add(botAlgoPick, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 120, -1));

        botAlgoLabel.setForeground(new java.awt.Color(255, 255, 255));
        botAlgoLabel.setText("Algorithm");
        botTrackerContainer.add(botAlgoLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        botTrackerPanel.setBackground(new java.awt.Color(0, 0, 0));
        botTrackerPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        botActual.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        botActual.setForeground(new java.awt.Color(0, 204, 0));
        botActual.setText("jLabel13");
        botTrackerPanel.add(botActual, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 10, -1, -1));

        botProjectedLabel.setBackground(new java.awt.Color(255, 255, 255));
        botProjectedLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        botProjectedLabel.setForeground(new java.awt.Color(255, 255, 255));
        botProjectedLabel.setText("Projected:");
        botTrackerPanel.add(botProjectedLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, -1, -1));

        botProjected.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        botProjected.setForeground(new java.awt.Color(0, 204, 0));
        botProjected.setText("jLabel13");
        botTrackerPanel.add(botProjected, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 40, -1, -1));

        botActualLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        botActualLabel.setForeground(new java.awt.Color(255, 255, 255));
        botActualLabel.setText("Actual:");
        botActualLabel.setToolTipText("");
        botTrackerPanel.add(botActualLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        botTrackerContainer.add(botTrackerPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 10, 720, 120));

        mainPanelContainer.add(botTrackerContainer, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 390, 880, 140));

        getContentPane().add(mainPanelContainer, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1210, 560));

        stockOption.setText("Stock");

        changeIndexOption.setText("Change Index");

        IndexButtons.add(DJIOption);
        DJIOption.setSelected(true);
        DJIOption.setText("Dow Jones");
        DJIOption.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DJIOptionActionPerformed(evt);
            }
        });
        changeIndexOption.add(DJIOption);

        IndexButtons.add(NASOption);
        NASOption.setText("Nasdaq");
        NASOption.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NASOptionActionPerformed(evt);
            }
        });
        changeIndexOption.add(NASOption);

        IndexButtons.add(SNPOption);
        SNPOption.setText("S&P 500");
        SNPOption.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SNPOptionActionPerformed(evt);
            }
        });
        changeIndexOption.add(SNPOption);

        stockOption.add(changeIndexOption);

        mainMenuBar.add(stockOption);

        SettingsMenuItem.setText("Settings");

        APIKeyMenuItem.setText("Finhub API Key");
        APIKeyMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                APIKeyMenuItemActionPerformed(evt);
            }
        });
        SettingsMenuItem.add(APIKeyMenuItem);

        mainMenuBar.add(SettingsMenuItem);

        setJMenuBar(mainMenuBar);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void DJIOptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DJIOptionActionPerformed
        currentIndexPick.setText("Dow Jones");
        currentIndex = "DJI";
    }//GEN-LAST:event_DJIOptionActionPerformed

    private void NASOptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NASOptionActionPerformed
        //System.out.println("Nasdaq");
        currentIndexPick.setText("Nasdaq");
        currentIndex = "NAS";
    }//GEN-LAST:event_NASOptionActionPerformed

    private void SNPOptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SNPOptionActionPerformed
        //System.out.println("S&P");
        currentIndexPick.setText("S&P 500");
        currentIndex = "SNP";
    }//GEN-LAST:event_SNPOptionActionPerformed

    private void APIKeyMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_APIKeyMenuItemActionPerformed
        apiKeyDialog.setVisible(true);
        if(finhubAPIToken != null)
            currentAPIKey.setText("Current API Token: " + finhubAPIToken);
    }//GEN-LAST:event_APIKeyMenuItemActionPerformed

    private void APISaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_APISaveActionPerformed
        if(!ApiKeyField.getText().isEmpty())
            finhubAPIToken = ApiKeyField.getText();
        ApiKeyField.setText("");
        apiKeyDialog.setVisible(false);
    }//GEN-LAST:event_APISaveActionPerformed

    private void APICancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_APICancelActionPerformed
        ApiKeyField.setText("");
        apiKeyDialog.setVisible(false);
    }//GEN-LAST:event_APICancelActionPerformed

    private ComboBoxModel getComboModel()
    {
        return new DefaultComboBoxModel(algorithmList);
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MarketTracker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MarketTracker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MarketTracker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MarketTracker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MarketTracker().setVisible(true);
            }
        });
        
        
        //Put threaded operations here
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton APICancel;
    private javax.swing.JLabel APIHelpLabel;
    private javax.swing.JMenuItem APIKeyMenuItem;
    private javax.swing.JButton APISave;
    private javax.swing.JTextField ApiKeyField;
    private javax.swing.JRadioButtonMenuItem DJIOption;
    private javax.swing.ButtonGroup IndexButtons;
    private javax.swing.JRadioButtonMenuItem NASOption;
    private javax.swing.JRadioButtonMenuItem SNPOption;
    private javax.swing.JMenu SettingsMenuItem;
    private javax.swing.JDialog apiKeyDialog;
    private javax.swing.JLabel botActual;
    private javax.swing.JLabel botActualLabel;
    private javax.swing.JLabel botAlgoLabel;
    private javax.swing.JComboBox botAlgoPick;
    private javax.swing.JLabel botProjected;
    private javax.swing.JLabel botProjectedLabel;
    private javax.swing.JPanel botTrackerContainer;
    private javax.swing.JPanel botTrackerPanel;
    private javax.swing.JMenu changeIndexOption;
    private javax.swing.JLabel currentAPIKey;
    private javax.swing.JLabel currentIndexLabel;
    private javax.swing.JLabel currentIndexPick;
    private javax.swing.JLabel currentIndexPrice;
    private javax.swing.JLabel currentIndexPriceLabel;
    private javax.swing.JLabel enterAPIKeyLabel;
    private javax.swing.JMenuBar mainMenuBar;
    private javax.swing.JPanel mainPanelContainer;
    private javax.swing.JLabel midActual;
    private javax.swing.JLabel midActualLabel;
    private javax.swing.JLabel midAlgoLabel;
    private javax.swing.JComboBox midAlgoPick;
    private javax.swing.JLabel midProjected;
    private javax.swing.JLabel midProjectedLabel;
    private javax.swing.JPanel midTrackerContainer;
    private javax.swing.JPanel midTrackerPanel;
    private javax.swing.JPanel newsPanelContainer;
    private javax.swing.JPanel optionsPanel;
    private javax.swing.JMenu stockOption;
    private javax.swing.JLabel topActual;
    private javax.swing.JLabel topActualLabel;
    private javax.swing.JLabel topAlgoLabel;
    private javax.swing.JComboBox topAlgoPick;
    private javax.swing.JLabel topProjected;
    private javax.swing.JLabel topProjectedLabel;
    private javax.swing.JPanel topTrackerContainer;
    private javax.swing.JPanel topTrackerPanel;
    // End of variables declaration//GEN-END:variables
}
